// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.15.5
// source: proto/stolakeservice.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetInfoReq) Reset() {
	*x = GetInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoReq) ProtoMessage() {}

func (x *GetInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoReq.ProtoReflect.Descriptor instead.
func (*GetInfoReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{0}
}

type GetInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Agent Name which initiall is StoLake.  Variation may co-exist in the future
	AgentName string `protobuf:"bytes,1,opt,name=AgentName,proto3" json:"AgentName,omitempty"`
	// Server version indentifier.  Client is responsible for combatibility checks.
	Version string `protobuf:"bytes,2,opt,name=Version,proto3" json:"Version,omitempty"`
}

func (x *GetInfoRes) Reset() {
	*x = GetInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoRes) ProtoMessage() {}

func (x *GetInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoRes.ProtoReflect.Descriptor instead.
func (*GetInfoRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{1}
}

func (x *GetInfoRes) GetAgentName() string {
	if x != nil {
		return x.AgentName
	}
	return ""
}

func (x *GetInfoRes) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type TopLvScanRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopLvs []*TopLvInfo `protobuf:"bytes,1,rep,name=TopLvs,proto3" json:"TopLvs,omitempty"`
}

func (x *TopLvScanRes) Reset() {
	*x = TopLvScanRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopLvScanRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopLvScanRes) ProtoMessage() {}

func (x *TopLvScanRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopLvScanRes.ProtoReflect.Descriptor instead.
func (*TopLvScanRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{2}
}

func (x *TopLvScanRes) GetTopLvs() []*TopLvInfo {
	if x != nil {
		return x.TopLvs
	}
	return nil
}

type TopLvInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LvName     string `protobuf:"bytes,1,opt,name=LvName,proto3" json:"LvName,omitempty"`
	VgName     string `protobuf:"bytes,2,opt,name=VgName,proto3" json:"VgName,omitempty"`
	LvFullName string `protobuf:"bytes,3,opt,name=LvFullName,proto3" json:"LvFullName,omitempty"`
	RaidType   string `protobuf:"bytes,4,opt,name=RaidType,proto3" json:"RaidType,omitempty"`
}

func (x *TopLvInfo) Reset() {
	*x = TopLvInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopLvInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopLvInfo) ProtoMessage() {}

func (x *TopLvInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopLvInfo.ProtoReflect.Descriptor instead.
func (*TopLvInfo) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{3}
}

func (x *TopLvInfo) GetLvName() string {
	if x != nil {
		return x.LvName
	}
	return ""
}

func (x *TopLvInfo) GetVgName() string {
	if x != nil {
		return x.VgName
	}
	return ""
}

func (x *TopLvInfo) GetLvFullName() string {
	if x != nil {
		return x.LvFullName
	}
	return ""
}

func (x *TopLvInfo) GetRaidType() string {
	if x != nil {
		return x.RaidType
	}
	return ""
}

type LvConReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AffectedPvPath    string `protobuf:"bytes,1,opt,name=AffectedPvPath,proto3" json:"AffectedPvPath,omitempty"`
	AffectedVgName    string `protobuf:"bytes,2,opt,name=AffectedVgName,proto3" json:"AffectedVgName,omitempty"`
	ReplacementPvPath string `protobuf:"bytes,3,opt,name=ReplacementPvPath,proto3" json:"ReplacementPvPath,omitempty"`
}

func (x *LvConReq) Reset() {
	*x = LvConReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LvConReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LvConReq) ProtoMessage() {}

func (x *LvConReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LvConReq.ProtoReflect.Descriptor instead.
func (*LvConReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{4}
}

func (x *LvConReq) GetAffectedPvPath() string {
	if x != nil {
		return x.AffectedPvPath
	}
	return ""
}

func (x *LvConReq) GetAffectedVgName() string {
	if x != nil {
		return x.AffectedVgName
	}
	return ""
}

func (x *LvConReq) GetReplacementPvPath() string {
	if x != nil {
		return x.ReplacementPvPath
	}
	return ""
}

type MissingPvMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UUID   string `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Vgname string `protobuf:"bytes,2,opt,name=Vgname,proto3" json:"Vgname,omitempty"`
}

func (x *MissingPvMsg) Reset() {
	*x = MissingPvMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissingPvMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissingPvMsg) ProtoMessage() {}

func (x *MissingPvMsg) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissingPvMsg.ProtoReflect.Descriptor instead.
func (*MissingPvMsg) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{5}
}

func (x *MissingPvMsg) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *MissingPvMsg) GetVgname() string {
	if x != nil {
		return x.Vgname
	}
	return ""
}

type GetLvReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LvName string `protobuf:"bytes,1,opt,name=LvName,proto3" json:"LvName,omitempty"`
}

func (x *GetLvReq) Reset() {
	*x = GetLvReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLvReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLvReq) ProtoMessage() {}

func (x *GetLvReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLvReq.ProtoReflect.Descriptor instead.
func (*GetLvReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{6}
}

func (x *GetLvReq) GetLvName() string {
	if x != nil {
		return x.LvName
	}
	return ""
}

type GetLvRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LvList []*LV `protobuf:"bytes,1,rep,name=LvList,proto3" json:"LvList,omitempty"`
}

func (x *GetLvRes) Reset() {
	*x = GetLvRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLvRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLvRes) ProtoMessage() {}

func (x *GetLvRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLvRes.ProtoReflect.Descriptor instead.
func (*GetLvRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{7}
}

func (x *GetLvRes) GetLvList() []*LV {
	if x != nil {
		return x.LvList
	}
	return nil
}

type LV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vgname          string   `protobuf:"bytes,1,opt,name=Vgname,proto3" json:"Vgname,omitempty"`
	Lvname          string   `protobuf:"bytes,2,opt,name=Lvname,proto3" json:"Lvname,omitempty"`
	Lvsize          string   `protobuf:"bytes,3,opt,name=Lvsize,proto3" json:"Lvsize,omitempty"`
	Segtype         string   `protobuf:"bytes,4,opt,name=Segtype,proto3" json:"Segtype,omitempty"`
	Stripes         string   `protobuf:"bytes,5,opt,name=Stripes,proto3" json:"Stripes,omitempty"`
	Datacopies      string   `protobuf:"bytes,6,opt,name=Datacopies,proto3" json:"Datacopies,omitempty"`
	Paritychunks    string   `protobuf:"bytes,7,opt,name=Paritychunks,proto3" json:"Paritychunks,omitempty"`
	Devices         string   `protobuf:"bytes,8,opt,name=Devices,proto3" json:"Devices,omitempty"`
	Metadatadevices string   `protobuf:"bytes,9,opt,name=Metadatadevices,proto3" json:"Metadatadevices,omitempty"`
	Syncpercent     string   `protobuf:"bytes,10,opt,name=Syncpercent,proto3" json:"Syncpercent,omitempty"`
	Copypercent     string   `protobuf:"bytes,11,opt,name=Copypercent,proto3" json:"Copypercent,omitempty"`
	NestedLV        []*LV    `protobuf:"bytes,12,rep,name=NestedLV,proto3" json:"NestedLV,omitempty"`
	CfgPV           []string `protobuf:"bytes,13,rep,name=CfgPV,proto3" json:"CfgPV,omitempty"`
}

func (x *LV) Reset() {
	*x = LV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LV) ProtoMessage() {}

func (x *LV) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LV.ProtoReflect.Descriptor instead.
func (*LV) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{8}
}

func (x *LV) GetVgname() string {
	if x != nil {
		return x.Vgname
	}
	return ""
}

func (x *LV) GetLvname() string {
	if x != nil {
		return x.Lvname
	}
	return ""
}

func (x *LV) GetLvsize() string {
	if x != nil {
		return x.Lvsize
	}
	return ""
}

func (x *LV) GetSegtype() string {
	if x != nil {
		return x.Segtype
	}
	return ""
}

func (x *LV) GetStripes() string {
	if x != nil {
		return x.Stripes
	}
	return ""
}

func (x *LV) GetDatacopies() string {
	if x != nil {
		return x.Datacopies
	}
	return ""
}

func (x *LV) GetParitychunks() string {
	if x != nil {
		return x.Paritychunks
	}
	return ""
}

func (x *LV) GetDevices() string {
	if x != nil {
		return x.Devices
	}
	return ""
}

func (x *LV) GetMetadatadevices() string {
	if x != nil {
		return x.Metadatadevices
	}
	return ""
}

func (x *LV) GetSyncpercent() string {
	if x != nil {
		return x.Syncpercent
	}
	return ""
}

func (x *LV) GetCopypercent() string {
	if x != nil {
		return x.Copypercent
	}
	return ""
}

func (x *LV) GetNestedLV() []*LV {
	if x != nil {
		return x.NestedLV
	}
	return nil
}

func (x *LV) GetCfgPV() []string {
	if x != nil {
		return x.CfgPV
	}
	return nil
}

type GetUdevReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VendorName string `protobuf:"bytes,1,opt,name=VendorName,proto3" json:"VendorName,omitempty"`
}

func (x *GetUdevReq) Reset() {
	*x = GetUdevReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUdevReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUdevReq) ProtoMessage() {}

func (x *GetUdevReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUdevReq.ProtoReflect.Descriptor instead.
func (*GetUdevReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{9}
}

func (x *GetUdevReq) GetVendorName() string {
	if x != nil {
		return x.VendorName
	}
	return ""
}

type GetUdevRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevList []*Udev `protobuf:"bytes,1,rep,name=DevList,proto3" json:"DevList,omitempty"`
}

func (x *GetUdevRes) Reset() {
	*x = GetUdevRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUdevRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUdevRes) ProtoMessage() {}

func (x *GetUdevRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUdevRes.ProtoReflect.Descriptor instead.
func (*GetUdevRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{10}
}

func (x *GetUdevRes) GetDevList() []*Udev {
	if x != nil {
		return x.DevList
	}
	return nil
}

type Udev struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FwRev  string `protobuf:"bytes,1,opt,name=FwRev,proto3" json:"FwRev,omitempty"`
	Handle string `protobuf:"bytes,2,opt,name=Handle,proto3" json:"Handle,omitempty"`
	Model  string `protobuf:"bytes,3,opt,name=Model,proto3" json:"Model,omitempty"`
	Serial string `protobuf:"bytes,4,opt,name=Serial,proto3" json:"Serial,omitempty"`
	Vendor string `protobuf:"bytes,5,opt,name=Vendor,proto3" json:"Vendor,omitempty"`
}

func (x *Udev) Reset() {
	*x = Udev{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Udev) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Udev) ProtoMessage() {}

func (x *Udev) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Udev.ProtoReflect.Descriptor instead.
func (*Udev) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{11}
}

func (x *Udev) GetFwRev() string {
	if x != nil {
		return x.FwRev
	}
	return ""
}

func (x *Udev) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *Udev) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Udev) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

func (x *Udev) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

type GetPartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevPath string `protobuf:"bytes,1,opt,name=DevPath,proto3" json:"DevPath,omitempty"`
}

func (x *GetPartReq) Reset() {
	*x = GetPartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartReq) ProtoMessage() {}

func (x *GetPartReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartReq.ProtoReflect.Descriptor instead.
func (*GetPartReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{12}
}

func (x *GetPartReq) GetDevPath() string {
	if x != nil {
		return x.DevPath
	}
	return ""
}

type GetPartRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartedRes []string `protobuf:"bytes,1,rep,name=PartedRes,proto3" json:"PartedRes,omitempty"`
}

func (x *GetPartRes) Reset() {
	*x = GetPartRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartRes) ProtoMessage() {}

func (x *GetPartRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartRes.ProtoReflect.Descriptor instead.
func (*GetPartRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{13}
}

func (x *GetPartRes) GetPartedRes() []string {
	if x != nil {
		return x.PartedRes
	}
	return nil
}

type PartRmReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevPath string `protobuf:"bytes,1,opt,name=DevPath,proto3" json:"DevPath,omitempty"`
	PartNum uint64 `protobuf:"varint,2,opt,name=PartNum,proto3" json:"PartNum,omitempty"`
}

func (x *PartRmReq) Reset() {
	*x = PartRmReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartRmReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartRmReq) ProtoMessage() {}

func (x *PartRmReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartRmReq.ProtoReflect.Descriptor instead.
func (*PartRmReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{14}
}

func (x *PartRmReq) GetDevPath() string {
	if x != nil {
		return x.DevPath
	}
	return ""
}

func (x *PartRmReq) GetPartNum() uint64 {
	if x != nil {
		return x.PartNum
	}
	return 0
}

type PartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevPath  string `protobuf:"bytes,1,opt,name=DevPath,proto3" json:"DevPath,omitempty"`
	PartName string `protobuf:"bytes,2,opt,name=PartName,proto3" json:"PartName,omitempty"`
	PStart   uint64 `protobuf:"varint,3,opt,name=PStart,proto3" json:"PStart,omitempty"`
	PEnd     uint64 `protobuf:"varint,4,opt,name=PEnd,proto3" json:"PEnd,omitempty"`
}

func (x *PartReq) Reset() {
	*x = PartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartReq) ProtoMessage() {}

func (x *PartReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartReq.ProtoReflect.Descriptor instead.
func (*PartReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{15}
}

func (x *PartReq) GetDevPath() string {
	if x != nil {
		return x.DevPath
	}
	return ""
}

func (x *PartReq) GetPartName() string {
	if x != nil {
		return x.PartName
	}
	return ""
}

func (x *PartReq) GetPStart() uint64 {
	if x != nil {
		return x.PStart
	}
	return 0
}

func (x *PartReq) GetPEnd() uint64 {
	if x != nil {
		return x.PEnd
	}
	return 0
}

type PartRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req  *PartReq `protobuf:"bytes,1,opt,name=Req,proto3" json:"Req,omitempty"`
	Flag bool     `protobuf:"varint,2,opt,name=Flag,proto3" json:"Flag,omitempty"`
}

func (x *PartRes) Reset() {
	*x = PartRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartRes) ProtoMessage() {}

func (x *PartRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartRes.ProtoReflect.Descriptor instead.
func (*PartRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{16}
}

func (x *PartRes) GetReq() *PartReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *PartRes) GetFlag() bool {
	if x != nil {
		return x.Flag
	}
	return false
}

type PvInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PvName string `protobuf:"bytes,1,opt,name=PvName,proto3" json:"PvName,omitempty"`
	VgName string `protobuf:"bytes,2,opt,name=VgName,proto3" json:"VgName,omitempty"`
	Format string `protobuf:"bytes,3,opt,name=Format,proto3" json:"Format,omitempty"`
	Attr   string `protobuf:"bytes,4,opt,name=Attr,proto3" json:"Attr,omitempty"`
	PSizeB int64  `protobuf:"varint,5,opt,name=PSizeB,proto3" json:"PSizeB,omitempty"`
	PFreeB int64  `protobuf:"varint,6,opt,name=PFreeB,proto3" json:"PFreeB,omitempty"`
	Uuid   string `protobuf:"bytes,7,opt,name=Uuid,proto3" json:"Uuid,omitempty"`
}

func (x *PvInfo) Reset() {
	*x = PvInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvInfo) ProtoMessage() {}

func (x *PvInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvInfo.ProtoReflect.Descriptor instead.
func (*PvInfo) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{17}
}

func (x *PvInfo) GetPvName() string {
	if x != nil {
		return x.PvName
	}
	return ""
}

func (x *PvInfo) GetVgName() string {
	if x != nil {
		return x.VgName
	}
	return ""
}

func (x *PvInfo) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *PvInfo) GetAttr() string {
	if x != nil {
		return x.Attr
	}
	return ""
}

func (x *PvInfo) GetPSizeB() int64 {
	if x != nil {
		return x.PSizeB
	}
	return 0
}

func (x *PvInfo) GetPFreeB() int64 {
	if x != nil {
		return x.PFreeB
	}
	return 0
}

func (x *PvInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type VgInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VgName    string `protobuf:"bytes,1,opt,name=VgName,proto3" json:"VgName,omitempty"`
	PvCount   uint32 `protobuf:"varint,2,opt,name=PvCount,proto3" json:"PvCount,omitempty"`
	LvCount   uint32 `protobuf:"varint,3,opt,name=LvCount,proto3" json:"LvCount,omitempty"`
	SnapCount uint32 `protobuf:"varint,4,opt,name=SnapCount,proto3" json:"SnapCount,omitempty"`
	VgAttr    string `protobuf:"bytes,5,opt,name=VgAttr,proto3" json:"VgAttr,omitempty"`
	VgSizeGb  uint32 `protobuf:"varint,6,opt,name=VgSizeGb,proto3" json:"VgSizeGb,omitempty"`
	VgFreeGb  uint32 `protobuf:"varint,7,opt,name=VgFreeGb,proto3" json:"VgFreeGb,omitempty"`
}

func (x *VgInfo) Reset() {
	*x = VgInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VgInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VgInfo) ProtoMessage() {}

func (x *VgInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VgInfo.ProtoReflect.Descriptor instead.
func (*VgInfo) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{18}
}

func (x *VgInfo) GetVgName() string {
	if x != nil {
		return x.VgName
	}
	return ""
}

func (x *VgInfo) GetPvCount() uint32 {
	if x != nil {
		return x.PvCount
	}
	return 0
}

func (x *VgInfo) GetLvCount() uint32 {
	if x != nil {
		return x.LvCount
	}
	return 0
}

func (x *VgInfo) GetSnapCount() uint32 {
	if x != nil {
		return x.SnapCount
	}
	return 0
}

func (x *VgInfo) GetVgAttr() string {
	if x != nil {
		return x.VgAttr
	}
	return ""
}

func (x *VgInfo) GetVgSizeGb() uint32 {
	if x != nil {
		return x.VgSizeGb
	}
	return 0
}

func (x *VgInfo) GetVgFreeGb() uint32 {
	if x != nil {
		return x.VgFreeGb
	}
	return 0
}

type PvScanRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pvs []*PvInfo `protobuf:"bytes,1,rep,name=Pvs,proto3" json:"Pvs,omitempty"`
}

func (x *PvScanRes) Reset() {
	*x = PvScanRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvScanRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvScanRes) ProtoMessage() {}

func (x *PvScanRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvScanRes.ProtoReflect.Descriptor instead.
func (*PvScanRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{19}
}

func (x *PvScanRes) GetPvs() []*PvInfo {
	if x != nil {
		return x.Pvs
	}
	return nil
}

type VgScanRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vgs []*VgInfo `protobuf:"bytes,1,rep,name=Vgs,proto3" json:"Vgs,omitempty"`
}

func (x *VgScanRes) Reset() {
	*x = VgScanRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VgScanRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VgScanRes) ProtoMessage() {}

func (x *VgScanRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VgScanRes.ProtoReflect.Descriptor instead.
func (*VgScanRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{20}
}

func (x *VgScanRes) GetVgs() []*VgInfo {
	if x != nil {
		return x.Vgs
	}
	return nil
}

type PvRmReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PvNames []string `protobuf:"bytes,1,rep,name=PvNames,proto3" json:"PvNames,omitempty"`
}

func (x *PvRmReq) Reset() {
	*x = PvRmReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvRmReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvRmReq) ProtoMessage() {}

func (x *PvRmReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvRmReq.ProtoReflect.Descriptor instead.
func (*PvRmReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{21}
}

func (x *PvRmReq) GetPvNames() []string {
	if x != nil {
		return x.PvNames
	}
	return nil
}

type VgRmReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VgName string `protobuf:"bytes,1,opt,name=VgName,proto3" json:"VgName,omitempty"`
}

func (x *VgRmReq) Reset() {
	*x = VgRmReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VgRmReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VgRmReq) ProtoMessage() {}

func (x *VgRmReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VgRmReq.ProtoReflect.Descriptor instead.
func (*VgRmReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{22}
}

func (x *VgRmReq) GetVgName() string {
	if x != nil {
		return x.VgName
	}
	return ""
}

type RmRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
}

func (x *RmRes) Reset() {
	*x = RmRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RmRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmRes) ProtoMessage() {}

func (x *RmRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmRes.ProtoReflect.Descriptor instead.
func (*RmRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{23}
}

func (x *RmRes) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type VgChkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VgName string `protobuf:"bytes,1,opt,name=VgName,proto3" json:"VgName,omitempty"`
}

func (x *VgChkReq) Reset() {
	*x = VgChkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VgChkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VgChkReq) ProtoMessage() {}

func (x *VgChkReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VgChkReq.ProtoReflect.Descriptor instead.
func (*VgChkReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{24}
}

func (x *VgChkReq) GetVgName() string {
	if x != nil {
		return x.VgName
	}
	return ""
}

type VgChkRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vg      *VgInfo `protobuf:"bytes,1,opt,name=Vg,proto3" json:"Vg,omitempty"`
	IsExist bool    `protobuf:"varint,2,opt,name=IsExist,proto3" json:"IsExist,omitempty"`
}

func (x *VgChkRes) Reset() {
	*x = VgChkRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VgChkRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VgChkRes) ProtoMessage() {}

func (x *VgChkRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VgChkRes.ProtoReflect.Descriptor instead.
func (*VgChkRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{25}
}

func (x *VgChkRes) GetVg() *VgInfo {
	if x != nil {
		return x.Vg
	}
	return nil
}

func (x *VgChkRes) GetIsExist() bool {
	if x != nil {
		return x.IsExist
	}
	return false
}

type VgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartName string `protobuf:"bytes,1,opt,name=PartName,proto3" json:"PartName,omitempty"`
	VgName   string `protobuf:"bytes,2,opt,name=VgName,proto3" json:"VgName,omitempty"`
}

func (x *VgReq) Reset() {
	*x = VgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VgReq) ProtoMessage() {}

func (x *VgReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VgReq.ProtoReflect.Descriptor instead.
func (*VgReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{26}
}

func (x *VgReq) GetPartName() string {
	if x != nil {
		return x.PartName
	}
	return ""
}

func (x *VgReq) GetVgName() string {
	if x != nil {
		return x.VgName
	}
	return ""
}

type VgRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vg   *VgInfo `protobuf:"bytes,1,opt,name=Vg,proto3" json:"Vg,omitempty"`
	Flag bool    `protobuf:"varint,2,opt,name=Flag,proto3" json:"Flag,omitempty"`
}

func (x *VgRes) Reset() {
	*x = VgRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VgRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VgRes) ProtoMessage() {}

func (x *VgRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VgRes.ProtoReflect.Descriptor instead.
func (*VgRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{27}
}

func (x *VgRes) GetVg() *VgInfo {
	if x != nil {
		return x.Vg
	}
	return nil
}

func (x *VgRes) GetFlag() bool {
	if x != nil {
		return x.Flag
	}
	return false
}

// no parameter requirement for scan request
// empty message to server as provisioning in the future
type ScanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ScanReq) Reset() {
	*x = ScanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanReq) ProtoMessage() {}

func (x *ScanReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanReq.ProtoReflect.Descriptor instead.
func (*ScanReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{28}
}

// scan request response
type ScanRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
}

func (x *ScanRes) Reset() {
	*x = ScanRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanRes) ProtoMessage() {}

func (x *ScanRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanRes.ProtoReflect.Descriptor instead.
func (*ScanRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{29}
}

func (x *ScanRes) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type ChgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arg []string `protobuf:"bytes,1,rep,name=Arg,proto3" json:"Arg,omitempty"`
}

func (x *ChgReq) Reset() {
	*x = ChgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChgReq) ProtoMessage() {}

func (x *ChgReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChgReq.ProtoReflect.Descriptor instead.
func (*ChgReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{30}
}

func (x *ChgReq) GetArg() []string {
	if x != nil {
		return x.Arg
	}
	return nil
}

type ChgRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
}

func (x *ChgRes) Reset() {
	*x = ChgRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChgRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChgRes) ProtoMessage() {}

func (x *ChgRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChgRes.ProtoReflect.Descriptor instead.
func (*ChgRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{31}
}

func (x *ChgRes) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type MercProxyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The operation to be run on the local node's base operating system.
	// The agent will filter out commands that are not expected for security
	Cmd  string   `protobuf:"bytes,1,opt,name=Cmd,proto3" json:"Cmd,omitempty"`
	Args []string `protobuf:"bytes,2,rep,name=Args,proto3" json:"Args,omitempty"`
}

func (x *MercProxyReq) Reset() {
	*x = MercProxyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MercProxyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MercProxyReq) ProtoMessage() {}

func (x *MercProxyReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MercProxyReq.ProtoReflect.Descriptor instead.
func (*MercProxyReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{32}
}

func (x *MercProxyReq) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *MercProxyReq) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

type MercProxyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stdout string `protobuf:"bytes,1,opt,name=Stdout,proto3" json:"Stdout,omitempty"`
	Stderr string `protobuf:"bytes,2,opt,name=Stderr,proto3" json:"Stderr,omitempty"`
}

func (x *MercProxyRes) Reset() {
	*x = MercProxyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MercProxyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MercProxyRes) ProtoMessage() {}

func (x *MercProxyRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MercProxyRes.ProtoReflect.Descriptor instead.
func (*MercProxyRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{33}
}

func (x *MercProxyRes) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *MercProxyRes) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

type FileSystemTypeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns the discoverable file system type of the block device
	DevPath string `protobuf:"bytes,1,opt,name=DevPath,proto3" json:"DevPath,omitempty"`
}

func (x *FileSystemTypeReq) Reset() {
	*x = FileSystemTypeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileSystemTypeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileSystemTypeReq) ProtoMessage() {}

func (x *FileSystemTypeReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileSystemTypeReq.ProtoReflect.Descriptor instead.
func (*FileSystemTypeReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{34}
}

func (x *FileSystemTypeReq) GetDevPath() string {
	if x != nil {
		return x.DevPath
	}
	return ""
}

type FileSystemTypeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns "" if no file system is detected or the type of file system
	FsType string `protobuf:"bytes,1,opt,name=FsType,proto3" json:"FsType,omitempty"`
}

func (x *FileSystemTypeRes) Reset() {
	*x = FileSystemTypeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileSystemTypeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileSystemTypeRes) ProtoMessage() {}

func (x *FileSystemTypeRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileSystemTypeRes.ProtoReflect.Descriptor instead.
func (*FileSystemTypeRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{35}
}

func (x *FileSystemTypeRes) GetFsType() string {
	if x != nil {
		return x.FsType
	}
	return ""
}

type MountInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MountInfoReq) Reset() {
	*x = MountInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MountInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountInfoReq) ProtoMessage() {}

func (x *MountInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountInfoReq.ProtoReflect.Descriptor instead.
func (*MountInfoReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{36}
}

type MountInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns contents of /proc/self/mountinfo
	Info string `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *MountInfoRes) Reset() {
	*x = MountInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MountInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountInfoRes) ProtoMessage() {}

func (x *MountInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountInfoRes.ProtoReflect.Descriptor instead.
func (*MountInfoRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{37}
}

func (x *MountInfoRes) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type MountVolumeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Source path must start with /dev/
	SourcePath string `protobuf:"bytes,1,opt,name=SourcePath,proto3" json:"SourcePath,omitempty"`
	// Target path must start with /var/lib/kubelet/pods
	TargetPath string `protobuf:"bytes,2,opt,name=TargetPath,proto3" json:"TargetPath,omitempty"`
	// Valid File system types are xfs, ext2, ext3, fat and block for no file system
	FsType string `protobuf:"bytes,3,opt,name=FsType,proto3" json:"FsType,omitempty"`
	// Mount Read Only. Default is false.
	ReadOnly bool `protobuf:"varint,4,opt,name=ReadOnly,proto3" json:"ReadOnly,omitempty"`
	// Comma seperated string of mount options
	MountOptions string `protobuf:"bytes,5,opt,name=MountOptions,proto3" json:"MountOptions,omitempty"`
	// GroupID to be set for the mount target
	GroupId string `protobuf:"bytes,6,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	// Set user permission ugo+rwx on target
	AllUsers bool `protobuf:"varint,7,opt,name=AllUsers,proto3" json:"AllUsers,omitempty"`
}

func (x *MountVolumeReq) Reset() {
	*x = MountVolumeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MountVolumeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountVolumeReq) ProtoMessage() {}

func (x *MountVolumeReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountVolumeReq.ProtoReflect.Descriptor instead.
func (*MountVolumeReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{38}
}

func (x *MountVolumeReq) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *MountVolumeReq) GetTargetPath() string {
	if x != nil {
		return x.TargetPath
	}
	return ""
}

func (x *MountVolumeReq) GetFsType() string {
	if x != nil {
		return x.FsType
	}
	return ""
}

func (x *MountVolumeReq) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *MountVolumeReq) GetMountOptions() string {
	if x != nil {
		return x.MountOptions
	}
	return ""
}

func (x *MountVolumeReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *MountVolumeReq) GetAllUsers() bool {
	if x != nil {
		return x.AllUsers
	}
	return false
}

type MountVolumeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stdout string `protobuf:"bytes,1,opt,name=Stdout,proto3" json:"Stdout,omitempty"`
}

func (x *MountVolumeRes) Reset() {
	*x = MountVolumeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MountVolumeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountVolumeRes) ProtoMessage() {}

func (x *MountVolumeRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountVolumeRes.ProtoReflect.Descriptor instead.
func (*MountVolumeRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{39}
}

func (x *MountVolumeRes) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

type UnMountVolumeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetPath string `protobuf:"bytes,1,opt,name=TargetPath,proto3" json:"TargetPath,omitempty"`
}

func (x *UnMountVolumeReq) Reset() {
	*x = UnMountVolumeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnMountVolumeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnMountVolumeReq) ProtoMessage() {}

func (x *UnMountVolumeReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnMountVolumeReq.ProtoReflect.Descriptor instead.
func (*UnMountVolumeReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{40}
}

func (x *UnMountVolumeReq) GetTargetPath() string {
	if x != nil {
		return x.TargetPath
	}
	return ""
}

type UnMountVolumeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stdout string `protobuf:"bytes,1,opt,name=Stdout,proto3" json:"Stdout,omitempty"`
}

func (x *UnMountVolumeRes) Reset() {
	*x = UnMountVolumeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnMountVolumeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnMountVolumeRes) ProtoMessage() {}

func (x *UnMountVolumeRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnMountVolumeRes.ProtoReflect.Descriptor instead.
func (*UnMountVolumeRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{41}
}

func (x *UnMountVolumeRes) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

type LvQoSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Target Path of LV block device. (/dev/vgname/lvname)
	TargetPath string `protobuf:"bytes,1,opt,name=TargetPath,proto3" json:"TargetPath,omitempty"`
	// IOPS per GB throttling limit
	IOPSperGB string `protobuf:"bytes,2,opt,name=IOPSperGB,proto3" json:"IOPSperGB,omitempty"`
	// MB/s per GB throttling limit
	MBpSperGB string `protobuf:"bytes,3,opt,name=MBpSperGB,proto3" json:"MBpSperGB,omitempty"`
}

func (x *LvQoSReq) Reset() {
	*x = LvQoSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LvQoSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LvQoSReq) ProtoMessage() {}

func (x *LvQoSReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LvQoSReq.ProtoReflect.Descriptor instead.
func (*LvQoSReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{42}
}

func (x *LvQoSReq) GetTargetPath() string {
	if x != nil {
		return x.TargetPath
	}
	return ""
}

func (x *LvQoSReq) GetIOPSperGB() string {
	if x != nil {
		return x.IOPSperGB
	}
	return ""
}

func (x *LvQoSReq) GetMBpSperGB() string {
	if x != nil {
		return x.MBpSperGB
	}
	return ""
}

type LvQoSRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LvQoSRes) Reset() {
	*x = LvQoSRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LvQoSRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LvQoSRes) ProtoMessage() {}

func (x *LvQoSRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LvQoSRes.ProtoReflect.Descriptor instead.
func (*LvQoSRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{43}
}

type GetSedRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllList    []*Udev `protobuf:"bytes,1,rep,name=AllList,proto3" json:"AllList,omitempty"`
	NonSedList []*Udev `protobuf:"bytes,2,rep,name=NonSedList,proto3" json:"NonSedList,omitempty"`
	SedList    []*Udev `protobuf:"bytes,3,rep,name=SedList,proto3" json:"SedList,omitempty"`
}

func (x *GetSedRes) Reset() {
	*x = GetSedRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSedRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSedRes) ProtoMessage() {}

func (x *GetSedRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSedRes.ProtoReflect.Descriptor instead.
func (*GetSedRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{44}
}

func (x *GetSedRes) GetAllList() []*Udev {
	if x != nil {
		return x.AllList
	}
	return nil
}

func (x *GetSedRes) GetNonSedList() []*Udev {
	if x != nil {
		return x.NonSedList
	}
	return nil
}

func (x *GetSedRes) GetSedList() []*Udev {
	if x != nil {
		return x.SedList
	}
	return nil
}

type Res struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsTrue bool `protobuf:"varint,1,opt,name=IsTrue,proto3" json:"IsTrue,omitempty"`
}

func (x *Res) Reset() {
	*x = Res{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Res) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Res) ProtoMessage() {}

func (x *Res) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Res.ProtoReflect.Descriptor instead.
func (*Res) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{45}
}

func (x *Res) GetIsTrue() bool {
	if x != nil {
		return x.IsTrue
	}
	return false
}

type ConfigBandReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevPath string `protobuf:"bytes,1,opt,name=DevPath,proto3" json:"DevPath,omitempty"`
	PartNum uint64 `protobuf:"varint,2,opt,name=PartNum,proto3" json:"PartNum,omitempty"`
	PStart  uint64 `protobuf:"varint,3,opt,name=PStart,proto3" json:"PStart,omitempty"`
	PEnd    uint64 `protobuf:"varint,4,opt,name=PEnd,proto3" json:"PEnd,omitempty"`
}

func (x *ConfigBandReq) Reset() {
	*x = ConfigBandReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigBandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigBandReq) ProtoMessage() {}

func (x *ConfigBandReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigBandReq.ProtoReflect.Descriptor instead.
func (*ConfigBandReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{46}
}

func (x *ConfigBandReq) GetDevPath() string {
	if x != nil {
		return x.DevPath
	}
	return ""
}

func (x *ConfigBandReq) GetPartNum() uint64 {
	if x != nil {
		return x.PartNum
	}
	return 0
}

func (x *ConfigBandReq) GetPStart() uint64 {
	if x != nil {
		return x.PStart
	}
	return 0
}

func (x *ConfigBandReq) GetPEnd() uint64 {
	if x != nil {
		return x.PEnd
	}
	return 0
}

// ISCSI //
type StageIscsiReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The Universal Unique Identifier (UUID) of the Logical Volume(LV)
	// to be used as backing storage of the iSCSI target. It should only
	// contain alphanumeric characters with length 6-4-4-4-4-4-6,
	// separated by hyphen. The LV with the UUID should exist and be
	// accessible on the system. This field is REQUIRED.
	// (i.e. 07HpVE-DIAN-wO00-eG7J-j3qf-xz2S-zyAdJT)
	LvUuid string `protobuf:"bytes,1,opt,name=LvUuid,proto3" json:"LvUuid,omitempty"`
	// The iSCSI Qualified Name(IQN) of the iSCSI initiator to be added
	// to the access control list of the iSCSI target, for access control
	// to the target. Run the command 'cat /etc/iscsi/initiatorname.iscsi'
	// on the initiator system to get the IQN. This field is REQUIRED.
	InitiatorIqn string `protobuf:"bytes,2,opt,name=InitiatorIqn,proto3" json:"InitiatorIqn,omitempty"`
}

func (x *StageIscsiReq) Reset() {
	*x = StageIscsiReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageIscsiReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageIscsiReq) ProtoMessage() {}

func (x *StageIscsiReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageIscsiReq.ProtoReflect.Descriptor instead.
func (*StageIscsiReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{47}
}

func (x *StageIscsiReq) GetLvUuid() string {
	if x != nil {
		return x.LvUuid
	}
	return ""
}

func (x *StageIscsiReq) GetInitiatorIqn() string {
	if x != nil {
		return x.InitiatorIqn
	}
	return ""
}

type StageIscsiRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The iSCSI Qualified Name (IQN) of the iSCSI Target used to uniquely
	// identify the target. It has a fixed prefix and follows the syntax
	// 'iqn.1992-09.com.seagate:lv:uniquename', where the unique name in
	// this case is the UUID of the logical volume used as the backing
	// storage.
	TargetIqn string `protobuf:"bytes,1,opt,name=TargetIqn,proto3" json:"TargetIqn,omitempty"`
	// The mapped LUN of the iSCSI target. Since there is only one
	// backstore that can be used, which is the backstore with the LV UUID
	// as its name, there will only be one mapped LUN to the target. The
	// default value is 'lun0'.
	Lun string `protobuf:"bytes,2,opt,name=Lun,proto3" json:"Lun,omitempty"`
	// The iSCSI target portal (Network address:port number) created by
	// targetcli when the iSCSI target is created (i.e. 10.1.0.123:3260).
	// The default port used for iSCSI is 3260. The default portal value
	// is '0.0.0.0:3260'. Currently, there is no attempt to change it
	// within the code.
	TargetPortal string `protobuf:"bytes,3,opt,name=TargetPortal,proto3" json:"TargetPortal,omitempty"`
}

func (x *StageIscsiRes) Reset() {
	*x = StageIscsiRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageIscsiRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageIscsiRes) ProtoMessage() {}

func (x *StageIscsiRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageIscsiRes.ProtoReflect.Descriptor instead.
func (*StageIscsiRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{48}
}

func (x *StageIscsiRes) GetTargetIqn() string {
	if x != nil {
		return x.TargetIqn
	}
	return ""
}

func (x *StageIscsiRes) GetLun() string {
	if x != nil {
		return x.Lun
	}
	return ""
}

func (x *StageIscsiRes) GetTargetPortal() string {
	if x != nil {
		return x.TargetPortal
	}
	return ""
}

type UnStageIscsiReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The UUID of the Logical Volume being used as backing storage of the
	// iSCSI target. It should only contain alphanumeric characters with
	// length 6-4-4-4-4-4-6, separated by hyphen. When the last initiator
	// IQN has been removed from the access control list of the target
	// with the UUID, the target will be deleted. This field is REQUIRED.
	// (i.e. 07HpVE-DIAN-wO00-eG7J-j3qf-xz2S-zyAdJT)
	LvUuid string `protobuf:"bytes,1,opt,name=LvUuid,proto3" json:"LvUuid,omitempty"`
	// The iSCSI Qualified Name(IQN) of the iSCSI initiator to be removed
	// from the access control list of the iSCSI target. When the last
	// initiator IQN has been removed from the access control list of the
	// iSCSI target, the iSCSI target will be deleted. The backstore with
	// the LV UUID as its name will also be removed from the iSCSI
	// configuration. This field is REQUIRED.
	InitiatorIqn string `protobuf:"bytes,2,opt,name=InitiatorIqn,proto3" json:"InitiatorIqn,omitempty"`
}

func (x *UnStageIscsiReq) Reset() {
	*x = UnStageIscsiReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnStageIscsiReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnStageIscsiReq) ProtoMessage() {}

func (x *UnStageIscsiReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnStageIscsiReq.ProtoReflect.Descriptor instead.
func (*UnStageIscsiReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{49}
}

func (x *UnStageIscsiReq) GetLvUuid() string {
	if x != nil {
		return x.LvUuid
	}
	return ""
}

func (x *UnStageIscsiReq) GetInitiatorIqn() string {
	if x != nil {
		return x.InitiatorIqn
	}
	return ""
}

type UnStageIscsiRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnStageIscsiRes) Reset() {
	*x = UnStageIscsiRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnStageIscsiRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnStageIscsiRes) ProtoMessage() {}

func (x *UnStageIscsiRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnStageIscsiRes.ProtoReflect.Descriptor instead.
func (*UnStageIscsiRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{50}
}

type ListIscsiReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListIscsiReq) Reset() {
	*x = ListIscsiReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIscsiReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIscsiReq) ProtoMessage() {}

func (x *ListIscsiReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIscsiReq.ProtoReflect.Descriptor instead.
func (*ListIscsiReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{51}
}

type ListIscsiRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns a list of Target structs, containing the 4 values of the
	// parameters in Target.
	Targets []*ListIscsiRes_Target `protobuf:"bytes,1,rep,name=Targets,proto3" json:"Targets,omitempty"`
}

func (x *ListIscsiRes) Reset() {
	*x = ListIscsiRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIscsiRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIscsiRes) ProtoMessage() {}

func (x *ListIscsiRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIscsiRes.ProtoReflect.Descriptor instead.
func (*ListIscsiRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{52}
}

func (x *ListIscsiRes) GetTargets() []*ListIscsiRes_Target {
	if x != nil {
		return x.Targets
	}
	return nil
}

// NVMEoF //
type StageNvmefReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The UUID of the Logical Volume(LV) to be used as backing storage
	// of the NVMeoF target Subsystem. It should only contain alphanumeric
	// characters with length 6-4-4-4-4-4-6, separated by hyphen. The
	// LV with the UUID should exist and be accessible on the system.
	// The LV path will be used as the device path of the NVMe subsystem.
	// This field is REQUIRED.
	// (i.e. 07HpVE-DIAN-wO00-eG7J-j3qf-xz2S-zyAdJT)
	LvUuid string `protobuf:"bytes,1,opt,name=LvUuid,proto3" json:"LvUuid,omitempty"`
	// The NVMe Qualified Name (NQN) of the host that is to be added to
	// the allowed hosts of the NVMe Subsystem. The NQN will first be read
	// from '/etc/nvme/hostnqn' on the host system. If that does not exist
	// , the autogenerated NQN value from the NVMe Host kernel module on
	// the host system is used next. Use the command 'nvme gen-hostnqn'
	// from the nvme-cli package to generate a hostnqn file in the
	// '/etc/nvme' directory. This field is REQUIRED.
	HostNqn string `protobuf:"bytes,2,opt,name=HostNqn,proto3" json:"HostNqn,omitempty"`
	// The address family parameter of the NVMe port. This parameter only
	// allow the value 'ipv4' and 'ipv6'. It is case sensitive and 'ipv4'
	// is more commonly used. Using 'ipv6' might result in an error if it
	// is not supported. This field is OPTIONAL. The value will default to
	// 'ipv4' if left empty.
	AdrFam string `protobuf:"bytes,3,opt,name=AdrFam,proto3" json:"AdrFam,omitempty"`
	// The transport type parameter of the NVMe port. This parameter
	// currently only allow the value 'rdma' or 'tcp'. Modprobe of the
	// necessary modules is required to use the stated transport type,
	// 'nvmet-rdma' or 'nvmet-tcp' for the 'rdma' or 'tcp' transport type
	// respectively. This field is OPTIONAL. The value will default to
	// 'rdma' if left empty.
	TrType string `protobuf:"bytes,4,opt,name=TrType,proto3" json:"TrType,omitempty"`
	// This parameter is to specify the network address of the NVMe port.
	// If using IP-based address, the address family should be 'ipv4' and
	// the transport type should also use IP-addressing. The default port
	// number used will be 4420. This field is REQUIRED.
	TrAddr string `protobuf:"bytes,5,opt,name=TrAddr,proto3" json:"TrAddr,omitempty"`
}

func (x *StageNvmefReq) Reset() {
	*x = StageNvmefReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageNvmefReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageNvmefReq) ProtoMessage() {}

func (x *StageNvmefReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageNvmefReq.ProtoReflect.Descriptor instead.
func (*StageNvmefReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{53}
}

func (x *StageNvmefReq) GetLvUuid() string {
	if x != nil {
		return x.LvUuid
	}
	return ""
}

func (x *StageNvmefReq) GetHostNqn() string {
	if x != nil {
		return x.HostNqn
	}
	return ""
}

func (x *StageNvmefReq) GetAdrFam() string {
	if x != nil {
		return x.AdrFam
	}
	return ""
}

func (x *StageNvmefReq) GetTrType() string {
	if x != nil {
		return x.TrType
	}
	return ""
}

func (x *StageNvmefReq) GetTrAddr() string {
	if x != nil {
		return x.TrAddr
	}
	return ""
}

type StageNvmefRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The NVMe Qualified Name (NQN) of the NVMeoF target Subsystem
	// used to uniquely identify the subsystem. It has a fixed prefix and
	// follows the syntax 'nqn.1992-09.com.seagate:nvme:uniquename', where
	// the unique name in this case is the UUID of the logical volume used
	// as the backing storage.
	SubsystemNqn string `protobuf:"bytes,1,opt,name=SubsystemNqn,proto3" json:"SubsystemNqn,omitempty"`
	// The namespace of the subsystem where the backing storage is
	// configured. The backing storage is the logical volume with the UUID
	// specified in the NQN of the subsystem. The device path of the
	// namespace is set to the path of the logical volume. The namespace
	// is typically specified in the NVMe device name after the 'n'.
	// (e.g. nvme0n1, namespace is 1 in this case)
	Namespace string `protobuf:"bytes,2,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	// The target portal value is the combination of the network address
	// and default NVMe port number of the NVMe port.
	TargetPortal string `protobuf:"bytes,3,opt,name=TargetPortal,proto3" json:"TargetPortal,omitempty"`
}

func (x *StageNvmefRes) Reset() {
	*x = StageNvmefRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageNvmefRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageNvmefRes) ProtoMessage() {}

func (x *StageNvmefRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageNvmefRes.ProtoReflect.Descriptor instead.
func (*StageNvmefRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{54}
}

func (x *StageNvmefRes) GetSubsystemNqn() string {
	if x != nil {
		return x.SubsystemNqn
	}
	return ""
}

func (x *StageNvmefRes) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *StageNvmefRes) GetTargetPortal() string {
	if x != nil {
		return x.TargetPortal
	}
	return ""
}

type UnStageNvmefReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The UUID of the Logical Volume being used as backing storage of the
	// NVMeoF target subsystem. It should only contain alphanumeric
	// characters with length 6-4-4-4-4-4-6, separated by hyphen.
	// (i.e. 07HpVE-DIAN-wO00-eG7J-j3qf-xz2S-zyAdJT)
	// When the last host NQN has been removed from the access control
	// list of the subsystem with the UUID, the namespace of the subsystem
	// will be removed and the subsystem will be deleted. The subsystem's
	// link to any port will be removed. If the port has the last
	// symlinked target removed, the port will also be deleted.
	// This field is REQUIRED.
	LvUuid string `protobuf:"bytes,1,opt,name=LvUuid,proto3" json:"LvUuid,omitempty"`
	// The NVMe Qualified Name (NQN) of the host that is to be removed
	// from the allowed hosts list of the NVMe target subsystem. When the
	// last host NQN has been removed from the allowed hosts list of the
	// NVMe subsystem, the namespace of the target will be removed and the
	// NVMe subsystem will be deleted. The symlink of the subsystem will
	// also be removed from any ports where it exists. This field is
	// REQUIRED.
	HostNqn string `protobuf:"bytes,2,opt,name=HostNqn,proto3" json:"HostNqn,omitempty"`
}

func (x *UnStageNvmefReq) Reset() {
	*x = UnStageNvmefReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnStageNvmefReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnStageNvmefReq) ProtoMessage() {}

func (x *UnStageNvmefReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnStageNvmefReq.ProtoReflect.Descriptor instead.
func (*UnStageNvmefReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{55}
}

func (x *UnStageNvmefReq) GetLvUuid() string {
	if x != nil {
		return x.LvUuid
	}
	return ""
}

func (x *UnStageNvmefReq) GetHostNqn() string {
	if x != nil {
		return x.HostNqn
	}
	return ""
}

type UnStageNvmefRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnStageNvmefRes) Reset() {
	*x = UnStageNvmefRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnStageNvmefRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnStageNvmefRes) ProtoMessage() {}

func (x *UnStageNvmefRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnStageNvmefRes.ProtoReflect.Descriptor instead.
func (*UnStageNvmefRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{56}
}

type ListNvmefReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListNvmefReq) Reset() {
	*x = ListNvmefReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNvmefReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNvmefReq) ProtoMessage() {}

func (x *ListNvmefReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNvmefReq.ProtoReflect.Descriptor instead.
func (*ListNvmefReq) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{57}
}

type ListNvmefRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns a list of Target structs, containing the 4 values of the
	// parameters in Target.
	Targets []*ListNvmefRes_Target `protobuf:"bytes,1,rep,name=Targets,proto3" json:"Targets,omitempty"`
}

func (x *ListNvmefRes) Reset() {
	*x = ListNvmefRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNvmefRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNvmefRes) ProtoMessage() {}

func (x *ListNvmefRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNvmefRes.ProtoReflect.Descriptor instead.
func (*ListNvmefRes) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{58}
}

func (x *ListNvmefRes) GetTargets() []*ListNvmefRes_Target {
	if x != nil {
		return x.Targets
	}
	return nil
}

type ListIscsiRes_Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The iSCSI Qualified Name (IQN) of the iSCSI Target used to uniquely
	// identify the target.
	TargetIqn string `protobuf:"bytes,1,opt,name=TargetIqn,proto3" json:"TargetIqn,omitempty"`
	// The UUID of the Logical Volume being used as backing storage of
	// the iSCSI target.
	LvUuid string `protobuf:"bytes,2,opt,name=LvUuid,proto3" json:"LvUuid,omitempty"`
	// Returns the default portal value that is created for every
	// iSCSI target. (i.e 0.0.0.0:3260)
	Portal string `protobuf:"bytes,3,opt,name=Portal,proto3" json:"Portal,omitempty"`
	// Returns the mapped LUN of the iSCSI target. Since there is only
	// 1 backstore that can be used, which is the backstore with the
	// LV UUID as its name, there will only be 1 mapped LUN to the
	// target. The default value 'lun0' will be returned.
	Lun string `protobuf:"bytes,4,opt,name=Lun,proto3" json:"Lun,omitempty"`
	// The iSCSI Qualified Name(IQN) of the iSCSI initiator in the
	// access control list of the iSCSI target. If there are multiple
	// initiator IQNs, they will be included in separate structs,
	// whereby the LV UUID and Initiator IQN pair will be unique for
	// each struct.
	InitiatorIqn string `protobuf:"bytes,5,opt,name=InitiatorIqn,proto3" json:"InitiatorIqn,omitempty"`
}

func (x *ListIscsiRes_Target) Reset() {
	*x = ListIscsiRes_Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIscsiRes_Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIscsiRes_Target) ProtoMessage() {}

func (x *ListIscsiRes_Target) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIscsiRes_Target.ProtoReflect.Descriptor instead.
func (*ListIscsiRes_Target) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{52, 0}
}

func (x *ListIscsiRes_Target) GetTargetIqn() string {
	if x != nil {
		return x.TargetIqn
	}
	return ""
}

func (x *ListIscsiRes_Target) GetLvUuid() string {
	if x != nil {
		return x.LvUuid
	}
	return ""
}

func (x *ListIscsiRes_Target) GetPortal() string {
	if x != nil {
		return x.Portal
	}
	return ""
}

func (x *ListIscsiRes_Target) GetLun() string {
	if x != nil {
		return x.Lun
	}
	return ""
}

func (x *ListIscsiRes_Target) GetInitiatorIqn() string {
	if x != nil {
		return x.InitiatorIqn
	}
	return ""
}

type ListNvmefRes_Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The NVMe Qualified Name (NQN) of the NVMeoF target Subsystem
	// used to uniquely identify the subsystem. It has a fixed prefix and
	// follows the syntax 'nqn.1992-09.com.seagate:nvme:uniquename', where
	// the unique name in this case is the UUID of the logical volume used
	// as the backing storage.
	SubsystemNqn string `protobuf:"bytes,1,opt,name=SubsystemNqn,proto3" json:"SubsystemNqn,omitempty"`
	// The UUID of the Logical Volume being used as backing storage of
	// the NVMe subsystem. Add the fixed prefix before the UUID to get
	// the NQN of the subsystem. The NQN can be used in the '-n'
	// option of the 'nvme connect' command on the host system to
	// connect to the NVMe subsystem.
	LvUuid string `protobuf:"bytes,2,opt,name=LvUuid,proto3" json:"LvUuid,omitempty"`
	// The namespace of the subsystem where the backing storage is the
	// logical volume with the LvUuid parameter as its UUID. The LV
	// path is set in the device path of the namespace. The namespace
	// is typically specified in the NVMe device name after the 'n'.
	// (e.g. nvme0n1, namespace is 1 in this case)
	NameSpace string `protobuf:"bytes,3,opt,name=NameSpace,proto3" json:"NameSpace,omitempty"`
	// The configured transport type of the NVMe port. Values are
	// 'rdma', 'tcp' or other supported transport types. Value can be
	// used in the '-t' option for the command 'nvme discover' on the
	// host system.
	TrType string `protobuf:"bytes,4,opt,name=TrType,proto3" json:"TrType,omitempty"`
	// The combination of the network address and default NVMe port
	// number of the NVMe port. (i.e 10.1.0.123:4420) The network
	// address portion can be used in the '-a' option for the command
	// 'nvme discover' on the host system.
	Portal string `protobuf:"bytes,5,opt,name=Portal,proto3" json:"Portal,omitempty"`
	// The NVMe Qualified Name (NQN) of the hosts allowed to connect
	// to the NVMe target. If there are multiple NQNs, each host NQN
	// will be returned in a separate struct, whereby the LV UUID and
	// host NQN pair will be unique for each struct. Use the 'nvme
	// discover' and 'nvme connect' command on the host system in the
	// allowed hosts list to connect to the NVMe subsytem.
	HostNqn string `protobuf:"bytes,6,opt,name=HostNqn,proto3" json:"HostNqn,omitempty"`
}

func (x *ListNvmefRes_Target) Reset() {
	*x = ListNvmefRes_Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stolakeservice_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNvmefRes_Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNvmefRes_Target) ProtoMessage() {}

func (x *ListNvmefRes_Target) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stolakeservice_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNvmefRes_Target.ProtoReflect.Descriptor instead.
func (*ListNvmefRes_Target) Descriptor() ([]byte, []int) {
	return file_proto_stolakeservice_proto_rawDescGZIP(), []int{58, 0}
}

func (x *ListNvmefRes_Target) GetSubsystemNqn() string {
	if x != nil {
		return x.SubsystemNqn
	}
	return ""
}

func (x *ListNvmefRes_Target) GetLvUuid() string {
	if x != nil {
		return x.LvUuid
	}
	return ""
}

func (x *ListNvmefRes_Target) GetNameSpace() string {
	if x != nil {
		return x.NameSpace
	}
	return ""
}

func (x *ListNvmefRes_Target) GetTrType() string {
	if x != nil {
		return x.TrType
	}
	return ""
}

func (x *ListNvmefRes_Target) GetPortal() string {
	if x != nil {
		return x.Portal
	}
	return ""
}

func (x *ListNvmefRes_Target) GetHostNqn() string {
	if x != nil {
		return x.HostNqn
	}
	return ""
}

var File_proto_stolakeservice_proto protoreflect.FileDescriptor

var file_proto_stolakeservice_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x6f, 0x6c, 0x61, 0x6b, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x0c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x22, 0x44, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x0c, 0x54, 0x6f, 0x70, 0x4c, 0x76,
	0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x54, 0x6f, 0x70, 0x4c, 0x76,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x6f, 0x70, 0x4c, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x54, 0x6f, 0x70, 0x4c, 0x76,
	0x73, 0x22, 0x77, 0x0a, 0x09, 0x54, 0x6f, 0x70, 0x4c, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x4c, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x4c, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x56, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x4c, 0x76, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x4c, 0x76, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x52, 0x61, 0x69, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x52, 0x61, 0x69, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x08, 0x4c,
	0x76, 0x43, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x50, 0x76, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x76, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x26, 0x0a, 0x0e, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x56, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x56, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x76, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x76, 0x50, 0x61, 0x74, 0x68, 0x22, 0x3a, 0x0a, 0x0c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x50, 0x76, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x67, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x56, 0x67, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x22, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4c, 0x76, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x4c, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c,
	0x76, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4c, 0x76, 0x52, 0x65,
	0x73, 0x12, 0x21, 0x0a, 0x06, 0x4c, 0x76, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x56, 0x52, 0x06, 0x4c, 0x76,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x89, 0x03, 0x0a, 0x02, 0x4c, 0x56, 0x12, 0x16, 0x0a, 0x06, 0x56,
	0x67, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x56, 0x67, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x76, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x76, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4c,
	0x76, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x76, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x67, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x65, 0x67, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x63,
	0x6f, 0x70, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x61, 0x74,
	0x61, 0x63, 0x6f, 0x70, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x69, 0x74,
	0x79, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x70, 0x79, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x70, 0x79, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x08, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4c, 0x56, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x56,
	0x52, 0x08, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4c, 0x56, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x66,
	0x67, 0x50, 0x56, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x43, 0x66, 0x67, 0x50, 0x56,
	0x22, 0x2c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x55, 0x64, 0x65, 0x76, 0x52, 0x65, 0x71, 0x12, 0x1e,
	0x0a, 0x0a, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x33,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x55, 0x64, 0x65, 0x76, 0x52, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x07,
	0x44, 0x65, 0x76, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x64, 0x65, 0x76, 0x52, 0x07, 0x44, 0x65, 0x76, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x7a, 0x0a, 0x04, 0x55, 0x64, 0x65, 0x76, 0x12, 0x14, 0x0a, 0x05, 0x46,
	0x77, 0x52, 0x65, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x46, 0x77, 0x52, 0x65,
	0x76, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x22,
	0x26, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x44, 0x65, 0x76, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x44, 0x65, 0x76, 0x50, 0x61, 0x74, 0x68, 0x22, 0x2a, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x50, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x22, 0x3f, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x74, 0x52, 0x6d, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x44, 0x65, 0x76, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x44, 0x65, 0x76, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61,
	0x72, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x50, 0x61, 0x72,
	0x74, 0x4e, 0x75, 0x6d, 0x22, 0x6b, 0x0a, 0x07, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x44, 0x65, 0x76, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x44, 0x65, 0x76, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x72,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x50, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x50, 0x45, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x50, 0x45, 0x6e,
	0x64, 0x22, 0x3f, 0x0a, 0x07, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x03,
	0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x52, 0x03, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x46, 0x6c,
	0x61, 0x67, 0x22, 0xa8, 0x01, 0x0a, 0x06, 0x50, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x50, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50,
	0x76, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x56, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x74, 0x74, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x74, 0x74, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x53, 0x69,
	0x7a, 0x65, 0x42, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x50, 0x53, 0x69, 0x7a, 0x65,
	0x42, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x46, 0x72, 0x65, 0x65, 0x42, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x50, 0x46, 0x72, 0x65, 0x65, 0x42, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x75, 0x69, 0x64, 0x22, 0xc2, 0x01,
	0x0a, 0x06, 0x56, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x67, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x56, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x50, 0x76, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x50, 0x76, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x76,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x4c, 0x76, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x6e, 0x61, 0x70, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x53, 0x6e, 0x61, 0x70, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x67, 0x41, 0x74, 0x74, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x56, 0x67, 0x41, 0x74, 0x74, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x56, 0x67,
	0x53, 0x69, 0x7a, 0x65, 0x47, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x56, 0x67,
	0x53, 0x69, 0x7a, 0x65, 0x47, 0x62, 0x12, 0x1a, 0x0a, 0x08, 0x56, 0x67, 0x46, 0x72, 0x65, 0x65,
	0x47, 0x62, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x56, 0x67, 0x46, 0x72, 0x65, 0x65,
	0x47, 0x62, 0x22, 0x2c, 0x0a, 0x09, 0x50, 0x76, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x12,
	0x1f, 0x0a, 0x03, 0x50, 0x76, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x50, 0x76, 0x73,
	0x22, 0x2c, 0x0a, 0x09, 0x56, 0x67, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x1f, 0x0a,
	0x03, 0x56, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x56, 0x67, 0x73, 0x22, 0x23,
	0x0a, 0x07, 0x50, 0x76, 0x52, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x76, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x50, 0x76, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x22, 0x21, 0x0a, 0x07, 0x56, 0x67, 0x52, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x56, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x56, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x25, 0x0a, 0x05, 0x52, 0x6d, 0x52, 0x65, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x22, 0x0a,
	0x08, 0x56, 0x67, 0x43, 0x68, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x56, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x43, 0x0a, 0x08, 0x56, 0x67, 0x43, 0x68, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x1d, 0x0a,
	0x02, 0x56, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x56, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x02, 0x56, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x49, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49,
	0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x05, 0x56, 0x67, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x50, 0x61, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x56,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x56, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x05, 0x56, 0x67, 0x52, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x02,
	0x56, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x56, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x02, 0x56, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x46,
	0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x22,
	0x09, 0x0a, 0x07, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x22, 0x27, 0x0a, 0x07, 0x53, 0x63,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x1a, 0x0a, 0x06, 0x43, 0x68, 0x67, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x41, 0x72, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x41, 0x72, 0x67, 0x22,
	0x26, 0x0a, 0x06, 0x43, 0x68, 0x67, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x34, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x6d, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x43, 0x6d, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x72, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72, 0x67, 0x73, 0x22, 0x3e, 0x0a,
	0x0c, 0x4d, 0x65, 0x72, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53,
	0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x64, 0x65, 0x72, 0x72, 0x22, 0x2d, 0x0a,
	0x11, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x65, 0x76, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x44, 0x65, 0x76, 0x50, 0x61, 0x74, 0x68, 0x22, 0x2b, 0x0a, 0x11,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x46, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x4d, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x22, 0x22, 0x0a, 0x0c, 0x4d, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xde, 0x01,
	0x0a, 0x0e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x46, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x46, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x64,
	0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x52, 0x65, 0x61, 0x64,
	0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4d, 0x6f, 0x75, 0x6e,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x28,
	0x0a, 0x0e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x22, 0x32, 0x0a, 0x10, 0x55, 0x6e, 0x4d, 0x6f,
	0x75, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0x2a, 0x0a, 0x10,
	0x55, 0x6e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x22, 0x66, 0x0a, 0x08, 0x4c, 0x76, 0x51, 0x6f,
	0x53, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x4f, 0x50, 0x53, 0x70, 0x65, 0x72, 0x47,
	0x42, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x4f, 0x50, 0x53, 0x70, 0x65, 0x72,
	0x47, 0x42, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x42, 0x70, 0x53, 0x70, 0x65, 0x72, 0x47, 0x42, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x42, 0x70, 0x53, 0x70, 0x65, 0x72, 0x47, 0x42,
	0x22, 0x0a, 0x0a, 0x08, 0x4c, 0x76, 0x51, 0x6f, 0x53, 0x52, 0x65, 0x73, 0x22, 0x86, 0x01, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x53, 0x65, 0x64, 0x52, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x07, 0x41, 0x6c,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x64, 0x65, 0x76, 0x52, 0x07, 0x41, 0x6c, 0x6c, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x4e, 0x6f, 0x6e, 0x53, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x64,
	0x65, 0x76, 0x52, 0x0a, 0x4e, 0x6f, 0x6e, 0x53, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x07, 0x53, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x64, 0x65, 0x76, 0x52, 0x07, 0x53, 0x65,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x1d, 0x0a, 0x03, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x49, 0x73, 0x54, 0x72, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73,
	0x54, 0x72, 0x75, 0x65, 0x22, 0x6f, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x61,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x65, 0x76, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x44, 0x65, 0x76, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x18, 0x0a, 0x07, 0x50, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x50, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x50, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x45, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x50, 0x45, 0x6e, 0x64, 0x22, 0x4b, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x73,
	0x63, 0x73, 0x69, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x76, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x76, 0x55, 0x75, 0x69, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x71, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x71, 0x6e, 0x22, 0x63, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x73, 0x63, 0x73, 0x69,
	0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x71, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x71,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x4c, 0x75, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x4c, 0x75, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x22, 0x4d, 0x0a, 0x0f, 0x55, 0x6e, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x49, 0x73, 0x63, 0x73, 0x69, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x76,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x76, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x71, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x71, 0x6e, 0x22, 0x11, 0x0a, 0x0f, 0x55, 0x6e, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x49, 0x73, 0x63, 0x73, 0x69, 0x52, 0x65, 0x73, 0x22, 0x0e, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x73, 0x63, 0x73, 0x69, 0x52, 0x65, 0x71, 0x22, 0xd3, 0x01, 0x0a, 0x0c, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x73, 0x63, 0x73, 0x69, 0x52, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x73, 0x63, 0x73, 0x69, 0x52, 0x65, 0x73,
	0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x07, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73,
	0x1a, 0x8c, 0x01, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x71, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x71, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x76, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x76, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x4c, 0x75, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4c, 0x75, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x71, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x71, 0x6e, 0x22,
	0x89, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4e, 0x76, 0x6d, 0x65, 0x66, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x76, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x4c, 0x76, 0x55, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x6f, 0x73,
	0x74, 0x4e, 0x71, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x48, 0x6f, 0x73, 0x74,
	0x4e, 0x71, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x64, 0x72, 0x46, 0x61, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x64, 0x72, 0x46, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x54,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x72, 0x41, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x72, 0x41, 0x64, 0x64, 0x72, 0x22, 0x75, 0x0a, 0x0d, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x4e, 0x76, 0x6d, 0x65, 0x66, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x53, 0x75, 0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x71, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x53, 0x75, 0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x71, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x22, 0x43, 0x0a, 0x0f, 0x55, 0x6e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4e, 0x76, 0x6d,
	0x65, 0x66, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x76, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x76, 0x55, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x48, 0x6f, 0x73, 0x74, 0x4e, 0x71, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x48, 0x6f, 0x73, 0x74, 0x4e, 0x71, 0x6e, 0x22, 0x11, 0x0a, 0x0f, 0x55, 0x6e, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x4e, 0x76, 0x6d, 0x65, 0x66, 0x52, 0x65, 0x73, 0x22, 0x0e, 0x0a, 0x0c, 0x4c, 0x69,
	0x73, 0x74, 0x4e, 0x76, 0x6d, 0x65, 0x66, 0x52, 0x65, 0x71, 0x22, 0xf3, 0x01, 0x0a, 0x0c, 0x4c,
	0x69, 0x73, 0x74, 0x4e, 0x76, 0x6d, 0x65, 0x66, 0x52, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x76, 0x6d, 0x65, 0x66, 0x52, 0x65,
	0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x07, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x1a, 0xac, 0x01, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x53, 0x75, 0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x71, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x53, 0x75, 0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x71, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x4c, 0x76, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x4c, 0x76, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x6f, 0x73, 0x74, 0x4e, 0x71,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x48, 0x6f, 0x73, 0x74, 0x4e, 0x71, 0x6e,
	0x32, 0xb0, 0x11, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x6c, 0x61, 0x6b, 0x65, 0x12, 0x34, 0x0a, 0x0c,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a,
	0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x12, 0x34, 0x0a, 0x0c, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x55, 0x44,
	0x65, 0x76, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x64,
	0x65, 0x76, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x64, 0x65, 0x76, 0x52, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x0c, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x12, 0x2c,
	0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x12, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x0c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x07,
	0x50, 0x61, 0x72, 0x74, 0x44, 0x65, 0x76, 0x12, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x44, 0x72, 0x69, 0x76, 0x65, 0x47, 0x50, 0x54, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0e,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x68, 0x79, 0x56, 0x6f, 0x6c, 0x12, 0x0e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x76, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73,
	0x12, 0x34, 0x0a, 0x10, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x56, 0x6f, 0x6c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x67, 0x53,
	0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x50, 0x68, 0x79, 0x56, 0x6f, 0x6c, 0x12, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x76, 0x52, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x6d, 0x52, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x56, 0x6f,
	0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x67, 0x52, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x6d, 0x52, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x6f, 0x6c,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x67,
	0x43, 0x68, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x67, 0x43, 0x68, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x56, 0x6f, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x56, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x56, 0x67, 0x52, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x0e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x56,
	0x6f, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x56, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x67,
	0x52, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x50, 0x76, 0x53, 0x63, 0x61, 0x6e, 0x12, 0x0e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x28, 0x0a,
	0x06, 0x56, 0x67, 0x53, 0x63, 0x61, 0x6e, 0x12, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x08, 0x56, 0x67, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x67, 0x52, 0x65,
	0x73, 0x12, 0x28, 0x0a, 0x08, 0x4c, 0x76, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x67, 0x52, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x65, 0x64, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x64, 0x65, 0x76, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x64, 0x52, 0x65, 0x73, 0x12,
	0x29, 0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x64, 0x12, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x0d, 0x54, 0x61,
	0x6b, 0x65, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x4c, 0x6f,
	0x63, 0x6b, 0x53, 0x65, 0x64, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x09, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x65,
	0x64, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73,
	0x12, 0x28, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x6e, 0x64, 0x12, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x0a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x0a, 0x55, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x6e, 0x64, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x42, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x49, 0x73, 0x63, 0x73, 0x69, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x73, 0x63, 0x73, 0x69, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x73, 0x63, 0x73, 0x69,
	0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x55, 0x6e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x73,
	0x63, 0x73, 0x69, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x49, 0x73, 0x63, 0x73, 0x69, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x73, 0x63, 0x73, 0x69,
	0x52, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x73, 0x63, 0x73, 0x69,
	0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x73, 0x63,
	0x73, 0x69, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x73, 0x63, 0x73, 0x69, 0x52, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x4e, 0x76, 0x6d, 0x65, 0x66, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4e, 0x76, 0x6d, 0x65, 0x66, 0x52, 0x65, 0x71, 0x1a, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4e, 0x76, 0x6d, 0x65,
	0x66, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x55, 0x6e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4e,
	0x76, 0x6d, 0x65, 0x66, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x4e, 0x76, 0x6d, 0x65, 0x66, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4e, 0x76, 0x6d, 0x65,
	0x66, 0x52, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x76, 0x6d, 0x65,
	0x66, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x76,
	0x6d, 0x65, 0x66, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4e, 0x76, 0x6d, 0x65, 0x66, 0x52, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0c, 0x4d,
	0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x71,
	0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x52, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x4d,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x12,
	0x41, 0x0a, 0x0d, 0x55, 0x6e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x4d, 0x6f, 0x75, 0x6e, 0x74,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x55, 0x6e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x4c, 0x76, 0x51, 0x6f, 0x53, 0x12, 0x0f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x76, 0x51, 0x6f, 0x53, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x76, 0x51, 0x6f, 0x53, 0x52, 0x65, 0x73, 0x12, 0x41, 0x0a,
	0x1a, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x54, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x12, 0x0e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x70, 0x4c, 0x76, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73,
	0x12, 0x36, 0x0a, 0x12, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x6f, 0x67, 0x69,
	0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x76, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x76, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x12, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x56, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x55, 0x49, 0x44, 0x12, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x76,
	0x4d, 0x73, 0x67, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x50, 0x76, 0x4d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x50, 0x76, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x76, 0x4d, 0x73, 0x67, 0x1a, 0x0a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x0f, 0x4c, 0x76, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4c, 0x76, 0x43, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x0f, 0x56, 0x67, 0x52, 0x65, 0x64, 0x75,
	0x63, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x56, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x73, 0x42, 0x0f, 0x5a, 0x0d, 0x73, 0x74, 0x6f, 0x6c, 0x61, 0x6b, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_stolakeservice_proto_rawDescOnce sync.Once
	file_proto_stolakeservice_proto_rawDescData = file_proto_stolakeservice_proto_rawDesc
)

func file_proto_stolakeservice_proto_rawDescGZIP() []byte {
	file_proto_stolakeservice_proto_rawDescOnce.Do(func() {
		file_proto_stolakeservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_stolakeservice_proto_rawDescData)
	})
	return file_proto_stolakeservice_proto_rawDescData
}

var file_proto_stolakeservice_proto_msgTypes = make([]protoimpl.MessageInfo, 61)
var file_proto_stolakeservice_proto_goTypes = []interface{}{
	(*GetInfoReq)(nil),          // 0: proto.GetInfoReq
	(*GetInfoRes)(nil),          // 1: proto.GetInfoRes
	(*TopLvScanRes)(nil),        // 2: proto.TopLvScanRes
	(*TopLvInfo)(nil),           // 3: proto.TopLvInfo
	(*LvConReq)(nil),            // 4: proto.LvConReq
	(*MissingPvMsg)(nil),        // 5: proto.MissingPvMsg
	(*GetLvReq)(nil),            // 6: proto.GetLvReq
	(*GetLvRes)(nil),            // 7: proto.GetLvRes
	(*LV)(nil),                  // 8: proto.LV
	(*GetUdevReq)(nil),          // 9: proto.GetUdevReq
	(*GetUdevRes)(nil),          // 10: proto.GetUdevRes
	(*Udev)(nil),                // 11: proto.Udev
	(*GetPartReq)(nil),          // 12: proto.GetPartReq
	(*GetPartRes)(nil),          // 13: proto.GetPartRes
	(*PartRmReq)(nil),           // 14: proto.PartRmReq
	(*PartReq)(nil),             // 15: proto.PartReq
	(*PartRes)(nil),             // 16: proto.PartRes
	(*PvInfo)(nil),              // 17: proto.PvInfo
	(*VgInfo)(nil),              // 18: proto.VgInfo
	(*PvScanRes)(nil),           // 19: proto.PvScanRes
	(*VgScanRes)(nil),           // 20: proto.VgScanRes
	(*PvRmReq)(nil),             // 21: proto.PvRmReq
	(*VgRmReq)(nil),             // 22: proto.VgRmReq
	(*RmRes)(nil),               // 23: proto.RmRes
	(*VgChkReq)(nil),            // 24: proto.VgChkReq
	(*VgChkRes)(nil),            // 25: proto.VgChkRes
	(*VgReq)(nil),               // 26: proto.VgReq
	(*VgRes)(nil),               // 27: proto.VgRes
	(*ScanReq)(nil),             // 28: proto.ScanReq
	(*ScanRes)(nil),             // 29: proto.ScanRes
	(*ChgReq)(nil),              // 30: proto.ChgReq
	(*ChgRes)(nil),              // 31: proto.ChgRes
	(*MercProxyReq)(nil),        // 32: proto.MercProxyReq
	(*MercProxyRes)(nil),        // 33: proto.MercProxyRes
	(*FileSystemTypeReq)(nil),   // 34: proto.FileSystemTypeReq
	(*FileSystemTypeRes)(nil),   // 35: proto.FileSystemTypeRes
	(*MountInfoReq)(nil),        // 36: proto.MountInfoReq
	(*MountInfoRes)(nil),        // 37: proto.MountInfoRes
	(*MountVolumeReq)(nil),      // 38: proto.MountVolumeReq
	(*MountVolumeRes)(nil),      // 39: proto.MountVolumeRes
	(*UnMountVolumeReq)(nil),    // 40: proto.UnMountVolumeReq
	(*UnMountVolumeRes)(nil),    // 41: proto.UnMountVolumeRes
	(*LvQoSReq)(nil),            // 42: proto.LvQoSReq
	(*LvQoSRes)(nil),            // 43: proto.LvQoSRes
	(*GetSedRes)(nil),           // 44: proto.GetSedRes
	(*Res)(nil),                 // 45: proto.Res
	(*ConfigBandReq)(nil),       // 46: proto.ConfigBandReq
	(*StageIscsiReq)(nil),       // 47: proto.StageIscsiReq
	(*StageIscsiRes)(nil),       // 48: proto.StageIscsiRes
	(*UnStageIscsiReq)(nil),     // 49: proto.UnStageIscsiReq
	(*UnStageIscsiRes)(nil),     // 50: proto.UnStageIscsiRes
	(*ListIscsiReq)(nil),        // 51: proto.ListIscsiReq
	(*ListIscsiRes)(nil),        // 52: proto.ListIscsiRes
	(*StageNvmefReq)(nil),       // 53: proto.StageNvmefReq
	(*StageNvmefRes)(nil),       // 54: proto.StageNvmefRes
	(*UnStageNvmefReq)(nil),     // 55: proto.UnStageNvmefReq
	(*UnStageNvmefRes)(nil),     // 56: proto.UnStageNvmefRes
	(*ListNvmefReq)(nil),        // 57: proto.ListNvmefReq
	(*ListNvmefRes)(nil),        // 58: proto.ListNvmefRes
	(*ListIscsiRes_Target)(nil), // 59: proto.ListIscsiRes.Target
	(*ListNvmefRes_Target)(nil), // 60: proto.ListNvmefRes.Target
}
var file_proto_stolakeservice_proto_depIdxs = []int32{
	3,  // 0: proto.TopLvScanRes.TopLvs:type_name -> proto.TopLvInfo
	8,  // 1: proto.GetLvRes.LvList:type_name -> proto.LV
	8,  // 2: proto.LV.NestedLV:type_name -> proto.LV
	11, // 3: proto.GetUdevRes.DevList:type_name -> proto.Udev
	15, // 4: proto.PartRes.Req:type_name -> proto.PartReq
	17, // 5: proto.PvScanRes.Pvs:type_name -> proto.PvInfo
	18, // 6: proto.VgScanRes.Vgs:type_name -> proto.VgInfo
	18, // 7: proto.VgChkRes.Vg:type_name -> proto.VgInfo
	18, // 8: proto.VgRes.Vg:type_name -> proto.VgInfo
	11, // 9: proto.GetSedRes.AllList:type_name -> proto.Udev
	11, // 10: proto.GetSedRes.NonSedList:type_name -> proto.Udev
	11, // 11: proto.GetSedRes.SedList:type_name -> proto.Udev
	59, // 12: proto.ListIscsiRes.Targets:type_name -> proto.ListIscsiRes.Target
	60, // 13: proto.ListNvmefRes.Targets:type_name -> proto.ListNvmefRes.Target
	0,  // 14: proto.stolake.RetrieveInfo:input_type -> proto.GetInfoReq
	9,  // 15: proto.stolake.RetrieveUDev:input_type -> proto.GetUdevReq
	12, // 16: proto.stolake.RetrievePart:input_type -> proto.GetPartReq
	14, // 17: proto.stolake.RemovePart:input_type -> proto.PartRmReq
	15, // 18: proto.stolake.PartDev:input_type -> proto.PartReq
	12, // 19: proto.stolake.ConfigDriveGPT:input_type -> proto.GetPartReq
	28, // 20: proto.stolake.RetrievePhyVol:input_type -> proto.ScanReq
	28, // 21: proto.stolake.RetrieveVolGroup:input_type -> proto.ScanReq
	21, // 22: proto.stolake.RemovePhyVol:input_type -> proto.PvRmReq
	22, // 23: proto.stolake.RemoveVolGroup:input_type -> proto.VgRmReq
	24, // 24: proto.stolake.CheckVolGroup:input_type -> proto.VgChkReq
	26, // 25: proto.stolake.CreateVolGroup:input_type -> proto.VgReq
	26, // 26: proto.stolake.ExtendVolGroup:input_type -> proto.VgReq
	28, // 27: proto.stolake.PvScan:input_type -> proto.ScanReq
	28, // 28: proto.stolake.VgScan:input_type -> proto.ScanReq
	30, // 29: proto.stolake.VgChange:input_type -> proto.ChgReq
	30, // 30: proto.stolake.LvChange:input_type -> proto.ChgReq
	9,  // 31: proto.stolake.RetrieveSed:input_type -> proto.GetUdevReq
	12, // 32: proto.stolake.CheckSed:input_type -> proto.GetPartReq
	12, // 33: proto.stolake.Takeownership:input_type -> proto.GetPartReq
	12, // 34: proto.stolake.LockSed:input_type -> proto.GetPartReq
	12, // 35: proto.stolake.UnlockSed:input_type -> proto.GetPartReq
	14, // 36: proto.stolake.LockBand:input_type -> proto.PartRmReq
	14, // 37: proto.stolake.UnlockBand:input_type -> proto.PartRmReq
	46, // 38: proto.stolake.ConfigureBand:input_type -> proto.ConfigBandReq
	47, // 39: proto.stolake.StageIscsi:input_type -> proto.StageIscsiReq
	49, // 40: proto.stolake.UnStageIscsi:input_type -> proto.UnStageIscsiReq
	51, // 41: proto.stolake.ListIscsi:input_type -> proto.ListIscsiReq
	53, // 42: proto.stolake.StageNvmef:input_type -> proto.StageNvmefReq
	55, // 43: proto.stolake.UnStageNvmef:input_type -> proto.UnStageNvmefReq
	57, // 44: proto.stolake.ListNvmef:input_type -> proto.ListNvmefReq
	32, // 45: proto.stolake.MercuryProxy:input_type -> proto.MercProxyReq
	34, // 46: proto.stolake.FileSystemType:input_type -> proto.FileSystemTypeReq
	36, // 47: proto.stolake.MountInfo:input_type -> proto.MountInfoReq
	38, // 48: proto.stolake.MountVolume:input_type -> proto.MountVolumeReq
	40, // 49: proto.stolake.UnMountVolume:input_type -> proto.UnMountVolumeReq
	42, // 50: proto.stolake.LvQoS:input_type -> proto.LvQoSReq
	28, // 51: proto.stolake.RetrieveTopLevelLogicalVol:input_type -> proto.ScanReq
	6,  // 52: proto.stolake.RetrieveLogicalVol:input_type -> proto.GetLvReq
	5,  // 53: proto.stolake.RetrieveVgFromUUID:input_type -> proto.MissingPvMsg
	5,  // 54: proto.stolake.RecoverPv:input_type -> proto.MissingPvMsg
	4,  // 55: proto.stolake.LvConvertRepair:input_type -> proto.LvConReq
	26, // 56: proto.stolake.VgReduceMissing:input_type -> proto.VgReq
	1,  // 57: proto.stolake.RetrieveInfo:output_type -> proto.GetInfoRes
	10, // 58: proto.stolake.RetrieveUDev:output_type -> proto.GetUdevRes
	13, // 59: proto.stolake.RetrievePart:output_type -> proto.GetPartRes
	23, // 60: proto.stolake.RemovePart:output_type -> proto.RmRes
	16, // 61: proto.stolake.PartDev:output_type -> proto.PartRes
	16, // 62: proto.stolake.ConfigDriveGPT:output_type -> proto.PartRes
	19, // 63: proto.stolake.RetrievePhyVol:output_type -> proto.PvScanRes
	20, // 64: proto.stolake.RetrieveVolGroup:output_type -> proto.VgScanRes
	23, // 65: proto.stolake.RemovePhyVol:output_type -> proto.RmRes
	23, // 66: proto.stolake.RemoveVolGroup:output_type -> proto.RmRes
	25, // 67: proto.stolake.CheckVolGroup:output_type -> proto.VgChkRes
	27, // 68: proto.stolake.CreateVolGroup:output_type -> proto.VgRes
	27, // 69: proto.stolake.ExtendVolGroup:output_type -> proto.VgRes
	29, // 70: proto.stolake.PvScan:output_type -> proto.ScanRes
	29, // 71: proto.stolake.VgScan:output_type -> proto.ScanRes
	31, // 72: proto.stolake.VgChange:output_type -> proto.ChgRes
	31, // 73: proto.stolake.LvChange:output_type -> proto.ChgRes
	44, // 74: proto.stolake.RetrieveSed:output_type -> proto.GetSedRes
	45, // 75: proto.stolake.CheckSed:output_type -> proto.Res
	45, // 76: proto.stolake.Takeownership:output_type -> proto.Res
	45, // 77: proto.stolake.LockSed:output_type -> proto.Res
	45, // 78: proto.stolake.UnlockSed:output_type -> proto.Res
	45, // 79: proto.stolake.LockBand:output_type -> proto.Res
	45, // 80: proto.stolake.UnlockBand:output_type -> proto.Res
	45, // 81: proto.stolake.ConfigureBand:output_type -> proto.Res
	48, // 82: proto.stolake.StageIscsi:output_type -> proto.StageIscsiRes
	50, // 83: proto.stolake.UnStageIscsi:output_type -> proto.UnStageIscsiRes
	52, // 84: proto.stolake.ListIscsi:output_type -> proto.ListIscsiRes
	54, // 85: proto.stolake.StageNvmef:output_type -> proto.StageNvmefRes
	56, // 86: proto.stolake.UnStageNvmef:output_type -> proto.UnStageNvmefRes
	58, // 87: proto.stolake.ListNvmef:output_type -> proto.ListNvmefRes
	33, // 88: proto.stolake.MercuryProxy:output_type -> proto.MercProxyRes
	35, // 89: proto.stolake.FileSystemType:output_type -> proto.FileSystemTypeRes
	37, // 90: proto.stolake.MountInfo:output_type -> proto.MountInfoRes
	39, // 91: proto.stolake.MountVolume:output_type -> proto.MountVolumeRes
	41, // 92: proto.stolake.UnMountVolume:output_type -> proto.UnMountVolumeRes
	43, // 93: proto.stolake.LvQoS:output_type -> proto.LvQoSRes
	2,  // 94: proto.stolake.RetrieveTopLevelLogicalVol:output_type -> proto.TopLvScanRes
	7,  // 95: proto.stolake.RetrieveLogicalVol:output_type -> proto.GetLvRes
	5,  // 96: proto.stolake.RetrieveVgFromUUID:output_type -> proto.MissingPvMsg
	45, // 97: proto.stolake.RecoverPv:output_type -> proto.Res
	45, // 98: proto.stolake.LvConvertRepair:output_type -> proto.Res
	45, // 99: proto.stolake.VgReduceMissing:output_type -> proto.Res
	57, // [57:100] is the sub-list for method output_type
	14, // [14:57] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_proto_stolakeservice_proto_init() }
func file_proto_stolakeservice_proto_init() {
	if File_proto_stolakeservice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_stolakeservice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopLvScanRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopLvInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LvConReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissingPvMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLvReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLvRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUdevReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUdevRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Udev); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartRmReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VgInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvScanRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VgScanRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvRmReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VgRmReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RmRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VgChkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VgChkRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VgRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChgRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MercProxyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MercProxyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileSystemTypeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileSystemTypeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MountInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MountInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MountVolumeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MountVolumeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnMountVolumeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnMountVolumeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LvQoSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LvQoSRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSedRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Res); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigBandReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageIscsiReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageIscsiRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnStageIscsiReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnStageIscsiRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIscsiReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIscsiRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageNvmefReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageNvmefRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnStageNvmefReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnStageNvmefRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNvmefReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNvmefRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIscsiRes_Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stolakeservice_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNvmefRes_Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_stolakeservice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   61,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_stolakeservice_proto_goTypes,
		DependencyIndexes: file_proto_stolakeservice_proto_depIdxs,
		MessageInfos:      file_proto_stolakeservice_proto_msgTypes,
	}.Build()
	File_proto_stolakeservice_proto = out.File
	file_proto_stolakeservice_proto_rawDesc = nil
	file_proto_stolakeservice_proto_goTypes = nil
	file_proto_stolakeservice_proto_depIdxs = nil
}
